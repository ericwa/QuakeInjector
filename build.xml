<project name="QuakeInjector"
         default="compile"
         basedir=".">
  <dirname property="quakeinjector.basedir" file="${ant.file.QuakeInjector}"/>

  <condition property="imports" value="${quakeinjector.basedir}">
	<not><isset property="imports"/></not>
  </condition>

  <import file="${imports}/ant-helpers/osname.xml"/>

  <property name="quakeinjector.main-class" value="de.haukerehfeld.quakeinjector.QuakeInjector"/>

  <property name="quakeinjector.src" location="${quakeinjector.basedir}/src"/>
  <property name="quakeinjector.build" location="${quakeinjector.basedir}/bin"/>
  <property name="quakeinjector.lib" location="${quakeinjector.basedir}/lib"/>
  <property name="quakeinjector.dist"  location="${quakeinjector.basedir}/dist"/>
  <property name="quakeinjector.doc"  location="${quakeinjector.basedir}/doc"/>
  <property name="quakeinjector.res"  location="${quakeinjector.basedir}/res"/>
  <property name="quakeinjector.release"  location="${quakeinjector.basedir}/release"/>
  <property name="quakeinjector.webstart"  location="${quakeinjector.basedir}/webstart"/>

  <!--
	Classpath
	-->
  <path id="quakeinjector.class.path">
	<pathelement location="${quakeinjector.build}"/>
	<!-- ressources -->
	<pathelement location="${quakeinjector.res}"/>
	<pathelement location="jnlp.jar"/>
	<fileset dir="${quakeinjector.lib}" includes="**/*.jar" />
  </path>
  <property name="quakeinjector.class.path" refid="quakeinjector.class.path"/>

  <path id="quakeinjector.library.path">
  </path>
  <property name="quakeinjector.library.path" refid="quakeinjector.library.path"/>

  <target name="clean.dist" depends="quakeinjector.init">
        <delete includeemptydirs="true">
		  <fileset dir="${quakeinjector.dist}" includes="**/*" />
		</delete>
        <mkdir dir="${quakeinjector.dist}" />
  </target>

  <target name="clean" depends="quakeinjector.init,clean.dist">
        <delete includeemptydirs="true">
		  <fileset dir="${quakeinjector.build}" includes="**/*.class" />
		  <fileset dir="${quakeinjector.webstart}" includes="**/*.jar" />
		</delete>
  </target>

  <!-- 
	Init
	-->
  <target name="quakeinjector.init">
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${quakeinjector.build}"/>
    <mkdir dir="${quakeinjector.dist}"/>
    <mkdir dir="${quakeinjector.doc}"/>
    <mkdir dir="${quakeinjector.res}"/>
    <mkdir dir="${quakeinjector.webstart}"/>
  </target>

  <target name="getversion">
    <exec outputproperty="quakeinjector.buildcommit" executable="git" 
          failifexecutionfails="false" searchpath="true">
      <arg line="describe --tags" />
    </exec>
    <tstamp />
  </target>

  <target name="changelog">
    <exec outputproperty="quakeinjector.changelog" executable="git" 
          failifexecutionfails="false" searchpath="true">
      <arg line="log -M  --oneline --decorate --abbrev-commit" />
    </exec>
    <tstamp />
    <echo file="${quakeinjector.basedir}/changelog.txt">Changelog
###

Refer to http://github.com/hrehfeld/QuakeInjector/commits/master for further details.

${quakeinjector.changelog}
</echo>
  </target>

  <target name="dumpversion" depends="getversion">
    <echo file="${quakeinjector.src}/de/haukerehfeld/quakeinjector/BuildCommit.java">/** autogenerated file */
package de.haukerehfeld.quakeinjector;
public final class BuildCommit { 
      public static final String buildCommit = "${quakeinjector.buildcommit}";
}</echo>
  </target>


  <!-- compile with cp -->
  <target name="compile" depends="quakeinjector.init,dumpversion"
          description="compile the source">
    <!-- Compile the java code from ${src} into ${build} -->
    <javac srcdir="${quakeinjector.src}" destdir="${quakeinjector.build}" 
		   debug="on" debuglevel="lines,vars,source"
		   source="1.5" fork="true">
	  <classpath refid="quakeinjector.class.path"/>
<!--	  <compilerarg value="-Xlint"/> -->
	  <compilerarg value="-Xlint:unchecked"/>
	  <compilerarg value="-Xlint:deprecation"/><!--
	  <compilerarg value="-Xlint:finally"/>
	  <compilerarg value="-Xlint:fallthrough"/> -->
	</javac>
  </target>

  <target name="run" depends="compile" description="Start the application">
	<java fork="true" classname="${quakeinjector.main-class}" dir="${quakeinjector.build}">
	  <jvmarg value="-Djava.library.path=${quakeinjector.library.path}" />
	  <jvmarg value="-Xshare:off" />
	  <jvmarg value="-ea" />
	  <classpath refid="quakeinjector.class.path"/>
	</java>
  </target>

  <target name="zipinspect" depends="compile"
	  description="Inspect filebase">
	<java fork="true" classname="de.haukerehfeld.quakeinjector.ZipInspect" dir="${quakeinjector.build}">
	  <jvmarg value="-Djava.library.path=${quakeinjector.library.path}" />
	  <jvmarg value="-Xshare:off" />
	  <jvmarg value="-ea" />
	  <classpath refid="quakeinjector.class.path"/>
	  <arg value="${filebase}" />
	</java>
  </target>



  <target name="benchmark" depends="compile" description="Start the application">
	<java fork="true" classname="${quakeinjector.main-class}" dir="${quakeinjector.build}">
	  <jvmarg value="-Djava.library.path=${quakeinjector.library.path}" />
	  <arg value="benchmark" />
	  <classpath refid="quakeinjector.class.path"/>
	</java>
  </target>


  <target name="profile" depends="compile" description="Start the application">
	<java fork="true" classname="${quakeinjector.main-class}" dir="${quakeinjector.build}">
	  <jvmarg value="-javaagent:../shiftone-jrat.jar" />
	  <jvmarg value="-Djava.library.path=${quakeinjector.library.path}" />
	  <classpath refid="quakeinjector.class.path"/>
	</java>
  </target>

  <target name="profileYK" depends="compile" description="Start the application">
	<java fork="true" classname="${quakeinjector.main-class}" dir="${quakeinjector.build}">
	  <jvmarg value="-agentlib:yjpagent" />
	  <jvmarg value="-Djava.library.path=${quakeinjector.library.path}" />
	  <classpath refid="quakeinjector.class.path"/>
	</java>
  </target>

  <target name="quakeinjector.jar" depends="clean.dist,compile">

    <copy todir="${quakeinjector.dist}">
      <fileset dir="${quakeinjector.lib}" includes="*.jar" />
      <fileset file="${quakeinjector.basedir}/COPYING" />
      <fileset file="${quakeinjector.basedir}/readme.txt" />
      <fileset file="${quakeinjector.basedir}/changelog.txt" />
    </copy>

	<jar destfile="${quakeinjector.dist}/quakeinjector-res.jar" update="true">
	  <fileset dir="${quakeinjector.res}/" />
	</jar>


    <!-- we need other jars for the manifest classpath, so make sure
		 they're created above -->
	<path id="jars">
      <fileset dir="${quakeinjector.dist}" includes="*.jar"/>
      <!--<fileset dir="${quakeinjector.lib}" includes="*.jar"/>-->
	</path>

	<pathconvert dirsep="/" pathsep=" " property="jars" refid="jars">
      <map from="${quakeinjector.dist}" to="."/>
    </pathconvert>

	<jar destfile="${quakeinjector.dist}/quakeinjector.jar" update="true">
	  <fileset dir="${quakeinjector.build}/" />
	  <manifest>
		<attribute name="Main-Class" value="${quakeinjector.main-class}"/>
		<attribute name="Class-Path" value="${jars}"/>
		<!-- Who is building this jar? -->
		<attribute name="Built-By" value="Hauke Rehfeld"/>
		<!-- Information about the program itself -->
		<attribute name="Implementation-Title" value="QuakeInjector"/>
		<attribute name="Implementation-Version" value="alpha1"/>
      </manifest>
	</jar>
  </target>

  <target name="release" description="Build jar and zip for release"
     depends="quakeinjector.jar,getversion">
     <zip destfile="${quakeinjector.release}/quakeinjector-${quakeinjector.buildcommit}.zip">
       <fileset dir="${quakeinjector.dist}" />
     </zip>

     <taskdef name="jarbundler" classname="net.sourceforge.jarbundler.JarBundler" classpath="${basedir}/antlib/jarbundler-2.2.0.jar"/>
     <jarbundler dir="${quakeinjector.release}"
                 name="Quake Injector"
                 mainclass="${quakeinjector.main-class}"
                 icon="${quakeinjector.res}/Inject2.icns">
       <jarfileset dir="${quakeinjector.dist}/">
         <include name="**/*.jar" />
       </jarfileset>
     </jarbundler>
  </target>

  <target name="javadoc" 
          description="Compile javadoc">
    <!-- Compile the java code from ${src} into ${build} -->
    <javadoc destdir="${quakeinjector.doc}"
			 classpathref="quakeinjector.class.path" 
			 doctitle="Quakeinjector"
			 access="private"
			 >
	  <sourcepath>
		<path path="${quakeinjector.src}" />
	  </sourcepath>
	  <link href="http://java.sun.com/javase/6/docs/api/" />
	</javadoc>
  </target> 
</project>
